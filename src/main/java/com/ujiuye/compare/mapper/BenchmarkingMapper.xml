<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ujiuye.compare.mapper.BenchmarkingMapper">
  <resultMap id="BaseResultMap" type="com.ujiuye.compare.bean.Benchmarking">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="company_name" jdbcType="VARCHAR" property="companyName" />
    <result column="sales_amount" jdbcType="DOUBLE" property="salesAmount" />
    <result column="YEAR" jdbcType="INTEGER" property="year" />
    <result column="business" jdbcType="VARCHAR" property="business" />
    <result column="priority" jdbcType="VARCHAR" property="priority" />
    <result column="disadvantage" jdbcType="VARCHAR" property="disadvantage" />
    <result column="STATUS" jdbcType="VARCHAR" property="status" />
    <result column="emp_count" jdbcType="INTEGER" property="empCount" />
    <result column="create_time" jdbcType="DATE" property="createTime" />
    <result column="simple_desc" jdbcType="VARCHAR" property="simpleDesc" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, company_name, sales_amount, `YEAR`, business, priority, disadvantage, `STATUS`, 
    emp_count, create_time, simple_desc
  </sql>
  <select id="selectByExample" parameterType="com.ujiuye.compare.bean.BenchmarkingExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from benchmarking
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from benchmarking
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from benchmarking
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ujiuye.compare.bean.BenchmarkingExample">
    delete from benchmarking
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ujiuye.compare.bean.Benchmarking">
    insert into benchmarking (id, company_name, sales_amount, 
      `YEAR`, business, priority, 
      disadvantage, `STATUS`, emp_count, 
      create_time, simple_desc)
    values (#{id,jdbcType=INTEGER}, #{companyName,jdbcType=VARCHAR}, #{salesAmount,jdbcType=DOUBLE}, 
      #{year,jdbcType=INTEGER}, #{business,jdbcType=VARCHAR}, #{priority,jdbcType=VARCHAR}, 
      #{disadvantage,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{empCount,jdbcType=INTEGER}, 
      #{createTime,jdbcType=DATE}, #{simpleDesc,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ujiuye.compare.bean.Benchmarking">
    insert into benchmarking
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="companyName != null">
        company_name,
      </if>
      <if test="salesAmount != null">
        sales_amount,
      </if>
      <if test="year != null">
        `YEAR`,
      </if>
      <if test="business != null">
        business,
      </if>
      <if test="priority != null">
        priority,
      </if>
      <if test="disadvantage != null">
        disadvantage,
      </if>
      <if test="status != null">
        `STATUS`,
      </if>
      <if test="empCount != null">
        emp_count,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="simpleDesc != null">
        simple_desc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="companyName != null">
        #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="salesAmount != null">
        #{salesAmount,jdbcType=DOUBLE},
      </if>
      <if test="year != null">
        #{year,jdbcType=INTEGER},
      </if>
      <if test="business != null">
        #{business,jdbcType=VARCHAR},
      </if>
      <if test="priority != null">
        #{priority,jdbcType=VARCHAR},
      </if>
      <if test="disadvantage != null">
        #{disadvantage,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="empCount != null">
        #{empCount,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=DATE},
      </if>
      <if test="simpleDesc != null">
        #{simpleDesc,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ujiuye.compare.bean.BenchmarkingExample" resultType="java.lang.Long">
    select count(*) from benchmarking
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update benchmarking
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.companyName != null">
        company_name = #{record.companyName,jdbcType=VARCHAR},
      </if>
      <if test="record.salesAmount != null">
        sales_amount = #{record.salesAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.year != null">
        `YEAR` = #{record.year,jdbcType=INTEGER},
      </if>
      <if test="record.business != null">
        business = #{record.business,jdbcType=VARCHAR},
      </if>
      <if test="record.priority != null">
        priority = #{record.priority,jdbcType=VARCHAR},
      </if>
      <if test="record.disadvantage != null">
        disadvantage = #{record.disadvantage,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        `STATUS` = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.empCount != null">
        emp_count = #{record.empCount,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=DATE},
      </if>
      <if test="record.simpleDesc != null">
        simple_desc = #{record.simpleDesc,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update benchmarking
    set id = #{record.id,jdbcType=INTEGER},
      company_name = #{record.companyName,jdbcType=VARCHAR},
      sales_amount = #{record.salesAmount,jdbcType=DOUBLE},
      `YEAR` = #{record.year,jdbcType=INTEGER},
      business = #{record.business,jdbcType=VARCHAR},
      priority = #{record.priority,jdbcType=VARCHAR},
      disadvantage = #{record.disadvantage,jdbcType=VARCHAR},
      `STATUS` = #{record.status,jdbcType=VARCHAR},
      emp_count = #{record.empCount,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=DATE},
      simple_desc = #{record.simpleDesc,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ujiuye.compare.bean.Benchmarking">
    update benchmarking
    <set>
      <if test="companyName != null">
        company_name = #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="salesAmount != null">
        sales_amount = #{salesAmount,jdbcType=DOUBLE},
      </if>
      <if test="year != null">
        `YEAR` = #{year,jdbcType=INTEGER},
      </if>
      <if test="business != null">
        business = #{business,jdbcType=VARCHAR},
      </if>
      <if test="priority != null">
        priority = #{priority,jdbcType=VARCHAR},
      </if>
      <if test="disadvantage != null">
        disadvantage = #{disadvantage,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `STATUS` = #{status,jdbcType=VARCHAR},
      </if>
      <if test="empCount != null">
        emp_count = #{empCount,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=DATE},
      </if>
      <if test="simpleDesc != null">
        simple_desc = #{simpleDesc,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ujiuye.compare.bean.Benchmarking">
    update benchmarking
    set company_name = #{companyName,jdbcType=VARCHAR},
      sales_amount = #{salesAmount,jdbcType=DOUBLE},
      `YEAR` = #{year,jdbcType=INTEGER},
      business = #{business,jdbcType=VARCHAR},
      priority = #{priority,jdbcType=VARCHAR},
      disadvantage = #{disadvantage,jdbcType=VARCHAR},
      `STATUS` = #{status,jdbcType=VARCHAR},
      emp_count = #{empCount,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=DATE},
      simple_desc = #{simpleDesc,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>